import requests
from bs4 import BeautifulSoup
import json
from datetime import datetime
import time

def scrape_matches():
    url = 'https://yalla-shoot.io/'  # أو أي موقع جدول مباريات
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64)'
    }

    try:
        response = requests.get(url, headers=headers, timeout=10)
        response.raise_for_status()
    except Exception as e:
        print(f"فشل الاتصال: {e}")
        return []

    soup = BeautifulSoup(response.text, 'html.parser')

    matches = []
    
    for match_card in soup.select('.match-card'):
        try:
            teams = match_card.select('.team-name')
            time_match = match_card.select_one('.match-time').text.strip()
            stream_link = match_card.find('a', href=True)['href']

            match_data = {
                'team1': teams[0].text.strip(),
                'team2': teams[1].text.strip(),
                'time': time_match,
                'league': 'مباراة ودية' if 'ودية' in match_card.text else 'غير محدد',  # تقدر تطورها لاحقاً
                'stream_link': stream_link
            }
            matches.append(match_data)
        except Exception as e:
            print(f"خطأ أثناء قراءة بيانات المباراة: {e}")

    return matches

def save_to_json(matches):
    now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    data = {
        'status': 'success',
        'last_update': now,
        'total_matches': len(matches),
        'matches': matches
    }
    with open('matches.json', 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=4)

def main_loop(interval_minutes=5):
    while True:
        print("🔄 بدء التحديث...")
        matches = scrape_matches()
        if matches:
            save_to_json(matches)
            print(f"✅ تم تحديث matches.json بنجاح ({len(matches)} مباريات)")
        else:
            print("❌ لم يتم الحصول على مباريات.")
        
        print(f"⏳ الإنتظار {interval_minutes} دقائق قبل التحديث التالي...")
        time.sleep(interval_minutes * 60)

if __name__ == "__main__":
    main_loop()
